{"ast":null,"code":"import _classCallCheck from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taras/wdi/react_max/assignments/1/base_syntax/src/pages/pageSix.js\";\nimport React, { Component } from 'react';\nimport Radium from 'radium';\n\nvar PageSix =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageSix, _Component);\n\n  function PageSix() {\n    _classCallCheck(this, PageSix);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PageSix).apply(this, arguments));\n  }\n\n  _createClass(PageSix, [{\n    key: \"render\",\n    value: function render() {\n      /*\n      jQuery.ganttView v.0.8.8\n      Copyright (c) 2010 JC Grubbs - jc.grubbs@devmynd.com\n      MIT License Applies\n      */\n\n      /*\n      Options\n      -----------------\n      showWeekends: boolean\n      data: object\n      cellWidth: number\n      cellHeight: number\n      slideWidth: number\n      dataUrl: string\n      behavior: {\n          clickable: boolean,\n          draggable: boolean,\n          resizable: boolean,\n          onClick: function,\n          onDrag: function,\n          onResize: function\n      }\n      */\n      React.createElement(\"script\", {\n        type: \"text/javascript\",\n        src: \"../lib/jquery-ui-1.8.4.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })(function (jQuery) {\n        jQuery.fn.ganttView = function () {\n          var args = Array.prototype.slice.call(arguments);\n\n          if (args.length == 1 && typeof args[0] == \"object\") {\n            build.call(this, args[0]);\n          }\n\n          if (args.length == 2 && typeof args[0] == \"string\") {\n            handleMethod.call(this, args[0], args[1]);\n          }\n        };\n\n        function build(options) {\n          var els = this;\n          var defaults = {\n            showWeekends: true,\n            cellWidth: 21,\n            cellHeight: 31,\n            slideWidth: 400,\n            vHeaderWidth: 100,\n            behavior: {\n              clickable: true,\n              draggable: true,\n              resizable: true\n            }\n          };\n          var opts = jQuery.extend(true, defaults, options);\n\n          if (opts.data) {\n            build();\n          } else if (opts.dataUrl) {\n            jQuery.getJSON(opts.dataUrl, function (data) {\n              opts.data = data;\n              build();\n            });\n          }\n\n          function build() {\n            var minDays = Math.floor(opts.slideWidth / opts.cellWidth + 5);\n            var startEnd = DateUtils.getBoundaryDatesFromData(opts.data, minDays);\n            opts.start = startEnd[0];\n            opts.end = startEnd[1];\n            els.each(function () {\n              var container = jQuery(this);\n              var div = jQuery(\"<div>\", {\n                \"class\": \"ganttview\"\n              });\n              new Chart(div, opts).render();\n              container.append(div);\n              var w = jQuery(\"div.ganttview-vtheader\", container).outerWidth() + jQuery(\"div.ganttview-slide-container\", container).outerWidth();\n              container.css(\"width\", w + 2 + \"px\");\n              new Behavior(container, opts).apply();\n            });\n          }\n        }\n\n        function handleMethod(method, value) {\n          if (method == \"setSlideWidth\") {\n            var div = $(\"div.ganttview\", this);\n            div.each(function () {\n              var vtWidth = $(\"div.ganttview-vtheader\", div).outerWidth();\n              $(div).width(vtWidth + value + 1);\n              $(\"div.ganttview-slide-container\", this).width(value);\n            });\n          }\n        }\n\n        var Chart = function Chart(div, opts) {\n          function render() {\n            addVtHeader(div, opts.data, opts.cellHeight);\n            var slideDiv = jQuery(\"<div>\", {\n              \"class\": \"ganttview-slide-container\",\n              \"css\": {\n                \"width\": opts.slideWidth + \"px\"\n              }\n            });\n            dates = getDates(opts.start, opts.end);\n            addHzHeader(slideDiv, dates, opts.cellWidth);\n            addGrid(slideDiv, opts.data, dates, opts.cellWidth, opts.showWeekends);\n            addBlockContainers(slideDiv, opts.data);\n            addBlocks(slideDiv, opts.data, opts.cellWidth, opts.start);\n            div.append(slideDiv);\n            applyLastClass(div.parent());\n          }\n\n          var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]; // Creates a 3 dimensional array [year][month][day] of every day\n          // between the given start and end dates\n\n          function getDates(start, end) {\n            var dates = [];\n            dates[start.getFullYear()] = [];\n            dates[start.getFullYear()][start.getMonth()] = [start];\n            var last = start;\n\n            while (last.compareTo(end) == -1) {\n              var next = last.clone().addDays(1);\n\n              if (!dates[next.getFullYear()]) {\n                dates[next.getFullYear()] = [];\n              }\n\n              if (!dates[next.getFullYear()][next.getMonth()]) {\n                dates[next.getFullYear()][next.getMonth()] = [];\n              }\n\n              dates[next.getFullYear()][next.getMonth()].push(next);\n              last = next;\n            }\n\n            return dates;\n          }\n\n          function addVtHeader(div, data, cellHeight) {\n            var headerDiv = jQuery(\"<div>\", {\n              \"class\": \"ganttview-vtheader\"\n            });\n\n            for (var i = 0; i < data.length; i++) {\n              var itemDiv = jQuery(\"<div>\", {\n                \"class\": \"ganttview-vtheader-item\"\n              });\n              itemDiv.append(jQuery(\"<div>\", {\n                \"class\": \"ganttview-vtheader-item-name\",\n                \"css\": {\n                  \"height\": data[i].series.length * cellHeight + \"px\"\n                }\n              }).append(data[i].name));\n              var seriesDiv = jQuery(\"<div>\", {\n                \"class\": \"ganttview-vtheader-series\"\n              });\n\n              for (var j = 0; j < data[i].series.length; j++) {\n                seriesDiv.append(jQuery(\"<div>\", {\n                  \"class\": \"ganttview-vtheader-series-name\"\n                }).append(data[i].series[j].name));\n              }\n\n              itemDiv.append(seriesDiv);\n              headerDiv.append(itemDiv);\n            }\n\n            div.append(headerDiv);\n          }\n\n          function addHzHeader(div, dates, cellWidth) {\n            var headerDiv = jQuery(\"<div>\", {\n              \"class\": \"ganttview-hzheader\"\n            });\n            var monthsDiv = jQuery(\"<div>\", {\n              \"class\": \"ganttview-hzheader-months\"\n            });\n            var daysDiv = jQuery(\"<div>\", {\n              \"class\": \"ganttview-hzheader-days\"\n            });\n            var totalW = 0;\n\n            for (var y in dates) {\n              for (var m in dates[y]) {\n                var w = dates[y][m].length * cellWidth;\n                totalW = totalW + w;\n                monthsDiv.append(jQuery(\"<div>\", {\n                  \"class\": \"ganttview-hzheader-month\",\n                  \"css\": {\n                    \"width\": w - 1 + \"px\"\n                  }\n                }).append(monthNames[m] + \"/\" + y));\n\n                for (var d in dates[y][m]) {\n                  daysDiv.append(jQuery(\"<div>\", {\n                    \"class\": \"ganttview-hzheader-day\"\n                  }).append(dates[y][m][d].getDate()));\n                }\n              }\n            }\n\n            monthsDiv.css(\"width\", totalW + \"px\");\n            daysDiv.css(\"width\", totalW + \"px\");\n            headerDiv.append(monthsDiv).append(daysDiv);\n            div.append(headerDiv);\n          }\n\n          function addGrid(div, data, dates, cellWidth, showWeekends) {\n            var gridDiv = jQuery(\"<div>\", {\n              \"class\": \"ganttview-grid\"\n            });\n            var rowDiv = jQuery(\"<div>\", {\n              \"class\": \"ganttview-grid-row\"\n            });\n\n            for (var y in dates) {\n              for (var m in dates[y]) {\n                for (var d in dates[y][m]) {\n                  var cellDiv = jQuery(\"<div>\", {\n                    \"class\": \"ganttview-grid-row-cell\"\n                  });\n\n                  if (DateUtils.isWeekend(dates[y][m][d]) && showWeekends) {\n                    cellDiv.addClass(\"ganttview-weekend\");\n                  }\n\n                  rowDiv.append(cellDiv);\n                }\n              }\n            }\n\n            var w = jQuery(\"div.ganttview-grid-row-cell\", rowDiv).length * cellWidth;\n            rowDiv.css(\"width\", w + \"px\");\n            gridDiv.css(\"width\", w + \"px\");\n\n            for (var i = 0; i < data.length; i++) {\n              for (var j = 0; j < data[i].series.length; j++) {\n                gridDiv.append(rowDiv.clone());\n              }\n            }\n\n            div.append(gridDiv);\n          }\n\n          function addBlockContainers(div, data) {\n            var blocksDiv = jQuery(\"<div>\", {\n              \"class\": \"ganttview-blocks\"\n            });\n\n            for (var i = 0; i < data.length; i++) {\n              for (var j = 0; j < data[i].series.length; j++) {\n                blocksDiv.append(jQuery(\"<div>\", {\n                  \"class\": \"ganttview-block-container\"\n                }));\n              }\n            }\n\n            div.append(blocksDiv);\n          }\n\n          function addBlocks(div, data, cellWidth, start) {\n            var rows = jQuery(\"div.ganttview-blocks div.ganttview-block-container\", div);\n            var rowIdx = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              for (var j = 0; j < data[i].series.length; j++) {\n                var series = data[i].series[j];\n                var size = DateUtils.daysBetween(series.start, series.end) + 1;\n                var offset = DateUtils.daysBetween(start, series.start);\n                var block = jQuery(\"<div>\", {\n                  \"class\": \"ganttview-block\",\n                  \"title\": series.name + \", \" + size + \" days\",\n                  \"css\": {\n                    \"width\": size * cellWidth - 9 + \"px\",\n                    \"margin-left\": offset * cellWidth + 3 + \"px\"\n                  }\n                });\n                addBlockData(block, data[i], series);\n\n                if (data[i].series[j].color) {\n                  block.css(\"background-color\", data[i].series[j].color);\n                }\n\n                block.append(jQuery(\"<div>\", {\n                  \"class\": \"ganttview-block-text\"\n                }).text(size));\n                jQuery(rows[rowIdx]).append(block);\n                rowIdx = rowIdx + 1;\n              }\n            }\n          }\n\n          function addBlockData(block, data, series) {\n            // This allows custom attributes to be added to the series data objects\n            // and makes them available to the 'data' argument of click, resize, and drag handlers\n            var blockData = {\n              id: data.id,\n              name: data.name\n            };\n            jQuery.extend(blockData, series);\n            block.data(\"block-data\", blockData);\n          }\n\n          function applyLastClass(div) {\n            jQuery(\"div.ganttview-grid-row div.ganttview-grid-row-cell:last-child\", div).addClass(\"last\");\n            jQuery(\"div.ganttview-hzheader-days div.ganttview-hzheader-day:last-child\", div).addClass(\"last\");\n            jQuery(\"div.ganttview-hzheader-months div.ganttview-hzheader-month:last-child\", div).addClass(\"last\");\n          }\n\n          return {\n            render: render\n          };\n        };\n\n        var Behavior = function Behavior(div, opts) {\n          function apply() {\n            if (opts.behavior.clickable) {\n              bindBlockClick(div, opts.behavior.onClick);\n            }\n\n            if (opts.behavior.resizable) {\n              bindBlockResize(div, opts.cellWidth, opts.start, opts.behavior.onResize);\n            }\n\n            if (opts.behavior.draggable) {\n              bindBlockDrag(div, opts.cellWidth, opts.start, opts.behavior.onDrag);\n            }\n          }\n\n          function bindBlockClick(div, callback) {\n            jQuery(\"div.ganttview-block\", div).live(\"click\", function () {\n              if (callback) {\n                callback(jQuery(this).data(\"block-data\"));\n              }\n            });\n          }\n\n          function bindBlockResize(div, cellWidth, startDate, callback) {\n            jQuery(\"div.ganttview-block\", div).resizable({\n              grid: cellWidth,\n              handles: \"e,w\",\n              stop: function stop() {\n                var block = jQuery(this);\n                updateDataAndPosition(div, block, cellWidth, startDate);\n\n                if (callback) {\n                  callback(block.data(\"block-data\"));\n                }\n              }\n            });\n          }\n\n          function bindBlockDrag(div, cellWidth, startDate, callback) {\n            jQuery(\"div.ganttview-block\", div).draggable({\n              axis: \"x\",\n              grid: [cellWidth, cellWidth],\n              stop: function stop() {\n                var block = jQuery(this);\n                updateDataAndPosition(div, block, cellWidth, startDate);\n\n                if (callback) {\n                  callback(block.data(\"block-data\"));\n                }\n              }\n            });\n          }\n\n          function updateDataAndPosition(div, block, cellWidth, startDate) {\n            var container = jQuery(\"div.ganttview-slide-container\", div);\n            var scroll = container.scrollLeft();\n            var offset = block.offset().left - container.offset().left - 1 + scroll; // Set new start date\n\n            var daysFromStart = Math.round(offset / cellWidth);\n            var newStart = startDate.clone().addDays(daysFromStart);\n            block.data(\"block-data\").start = newStart; // Set new end date\n\n            var width = block.outerWidth();\n            var numberOfDays = Math.round(width / cellWidth) - 1;\n            block.data(\"block-data\").end = newStart.clone().addDays(numberOfDays);\n            jQuery(\"div.ganttview-block-text\", block).text(numberOfDays + 1); // Remove top and left properties to avoid incorrect block positioning,\n            // set position to relative to keep blocks relative to scrollbar when scrolling\n\n            block.css(\"top\", \"\").css(\"left\", \"\").css(\"position\", \"relative\").css(\"margin-left\", offset + \"px\");\n          }\n\n          return {\n            apply: apply\n          };\n        };\n\n        var ArrayUtils = {\n          contains: function contains(arr, obj) {\n            var has = false;\n\n            for (var i = 0; i < arr.length; i++) {\n              if (arr[i] == obj) {\n                has = true;\n              }\n            }\n\n            return has;\n          }\n        };\n        var DateUtils = {\n          daysBetween: function daysBetween(start, end) {\n            if (!start || !end) {\n              return 0;\n            }\n\n            start = Date.parse(start);\n            end = Date.parse(end);\n\n            if (start.getYear() == 1901 || end.getYear() == 8099) {\n              return 0;\n            }\n\n            var count = 0,\n                date = start.clone();\n\n            while (date.compareTo(end) == -1) {\n              count = count + 1;\n              date.addDays(1);\n            }\n\n            return count;\n          },\n          isWeekend: function isWeekend(date) {\n            return date.getDay() % 6 == 0;\n          },\n          getBoundaryDatesFromData: function getBoundaryDatesFromData(data, minDays) {\n            var minStart = new Date();\n            maxEnd = new Date();\n\n            for (var i = 0; i < data.length; i++) {\n              for (var j = 0; j < data[i].series.length; j++) {\n                var start = Date.parse(data[i].series[j].start);\n                var end = Date.parse(data[i].series[j].end);\n\n                if (i == 0 && j == 0) {\n                  minStart = start;\n                  maxEnd = end;\n                }\n\n                if (minStart.compareTo(start) == 1) {\n                  minStart = start;\n                }\n\n                if (maxEnd.compareTo(end) == -1) {\n                  maxEnd = end;\n                }\n              }\n            } // Insure that the width of the chart is at least the slide width to avoid empty\n            // whitespace to the right of the grid\n\n\n            if (DateUtils.daysBetween(minStart, maxEnd) < minDays) {\n              maxEnd = minStart.clone().addDays(minDays);\n            }\n\n            return [minStart, maxEnd];\n          }\n        };\n      })(jQuery);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"ganttChart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"eventMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PageSix;\n}(Component);\n\nexport default Radium(PageSix);","map":{"version":3,"sources":["/Users/taras/wdi/react_max/assignments/1/base_syntax/src/pages/pageSix.js"],"names":["React","Component","Radium","PageSix","jQuery","fn","ganttView","args","Array","prototype","slice","call","arguments","length","build","handleMethod","options","els","defaults","showWeekends","cellWidth","cellHeight","slideWidth","vHeaderWidth","behavior","clickable","draggable","resizable","opts","extend","data","dataUrl","getJSON","minDays","Math","floor","startEnd","DateUtils","getBoundaryDatesFromData","start","end","each","container","div","Chart","render","append","w","outerWidth","css","Behavior","apply","method","value","$","vtWidth","width","addVtHeader","slideDiv","dates","getDates","addHzHeader","addGrid","addBlockContainers","addBlocks","applyLastClass","parent","monthNames","getFullYear","getMonth","last","compareTo","next","clone","addDays","push","headerDiv","i","itemDiv","series","name","seriesDiv","j","monthsDiv","daysDiv","totalW","y","m","d","getDate","gridDiv","rowDiv","cellDiv","isWeekend","addClass","blocksDiv","rows","rowIdx","size","daysBetween","offset","block","addBlockData","color","text","blockData","id","bindBlockClick","onClick","bindBlockResize","onResize","bindBlockDrag","onDrag","callback","live","startDate","grid","handles","stop","updateDataAndPosition","axis","scroll","scrollLeft","left","daysFromStart","round","newStart","numberOfDays","ArrayUtils","contains","arr","obj","has","Date","parse","getYear","count","date","getDay","minStart","maxEnd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Radium from 'radium';\n\nclass PageSix extends Component {\n    render() {\n        /*\n        jQuery.ganttView v.0.8.8\n        Copyright (c) 2010 JC Grubbs - jc.grubbs@devmynd.com\n        MIT License Applies\n        */\n\n        /*\n        Options\n        -----------------\n        showWeekends: boolean\n        data: object\n        cellWidth: number\n        cellHeight: number\n        slideWidth: number\n        dataUrl: string\n        behavior: {\n            clickable: boolean,\n            draggable: boolean,\n            resizable: boolean,\n            onClick: function,\n            onDrag: function,\n            onResize: function\n        }\n        */\n\n\n        <script type=\"text/javascript\" src=\"../lib/jquery-ui-1.8.4.js\" />\n\n\n\n\n        (function (jQuery) {\n\n            jQuery.fn.ganttView = function () {\n\n                var args = Array.prototype.slice.call(arguments);\n\n                if (args.length == 1 && typeof(args[0]) == \"object\") {\n                    build.call(this, args[0]);\n                }\n\n                if (args.length == 2 && typeof(args[0]) == \"string\") {\n                    handleMethod.call(this, args[0], args[1]);\n                }\n            };\n\n            function build(options) {\n\n                var els = this;\n                var defaults = {\n                    showWeekends: true,\n                    cellWidth: 21,\n                    cellHeight: 31,\n                    slideWidth: 400,\n                    vHeaderWidth: 100,\n                    behavior: {\n                        clickable: true,\n                        draggable: true,\n                        resizable: true\n                    }\n                };\n\n                var opts = jQuery.extend(true, defaults, options);\n\n                if (opts.data) {\n                    build();\n                } else if (opts.dataUrl) {\n                    jQuery.getJSON(opts.dataUrl, function (data) { opts.data = data; build(); });\n                }\n\n                function build() {\n\n                    var minDays = Math.floor((opts.slideWidth / opts.cellWidth)  + 5);\n                    var startEnd = DateUtils.getBoundaryDatesFromData(opts.data, minDays);\n                    opts.start = startEnd[0];\n                    opts.end = startEnd[1];\n\n                    els.each(function () {\n\n                        var container = jQuery(this);\n                        var div = jQuery(\"<div>\", { \"class\": \"ganttview\" });\n                        new Chart(div, opts).render();\n                        container.append(div);\n\n                        var w = jQuery(\"div.ganttview-vtheader\", container).outerWidth() +\n                            jQuery(\"div.ganttview-slide-container\", container).outerWidth();\n                        container.css(\"width\", (w + 2) + \"px\");\n\n                        new Behavior(container, opts).apply();\n                    });\n                }\n            }\n\n            function handleMethod(method, value) {\n\n                if (method == \"setSlideWidth\") {\n                    var div = $(\"div.ganttview\", this);\n                    div.each(function () {\n                        var vtWidth = $(\"div.ganttview-vtheader\", div).outerWidth();\n                        $(div).width(vtWidth + value + 1);\n                        $(\"div.ganttview-slide-container\", this).width(value);\n                    });\n                }\n            }\n\n            var Chart = function(div, opts) {\n\n                function render() {\n                    addVtHeader(div, opts.data, opts.cellHeight);\n\n                    var slideDiv = jQuery(\"<div>\", {\n                        \"class\": \"ganttview-slide-container\",\n                        \"css\": { \"width\": opts.slideWidth + \"px\" }\n                    });\n\n                    dates = getDates(opts.start, opts.end);\n                    addHzHeader(slideDiv, dates, opts.cellWidth);\n                    addGrid(slideDiv, opts.data, dates, opts.cellWidth, opts.showWeekends);\n                    addBlockContainers(slideDiv, opts.data);\n                    addBlocks(slideDiv, opts.data, opts.cellWidth, opts.start);\n                    div.append(slideDiv);\n                    applyLastClass(div.parent());\n                }\n\n                var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n                // Creates a 3 dimensional array [year][month][day] of every day\n                // between the given start and end dates\n                function getDates(start, end) {\n                    var dates = [];\n                    dates[start.getFullYear()] = [];\n                    dates[start.getFullYear()][start.getMonth()] = [start]\n                    var last = start;\n                    while (last.compareTo(end) == -1) {\n                        var next = last.clone().addDays(1);\n                        if (!dates[next.getFullYear()]) { dates[next.getFullYear()] = []; }\n                        if (!dates[next.getFullYear()][next.getMonth()]) {\n                            dates[next.getFullYear()][next.getMonth()] = [];\n                        }\n                        dates[next.getFullYear()][next.getMonth()].push(next);\n                        last = next;\n                    }\n                    return dates;\n                }\n\n                function addVtHeader(div, data, cellHeight) {\n                    var headerDiv = jQuery(\"<div>\", { \"class\": \"ganttview-vtheader\" });\n                    for (var i = 0; i < data.length; i++) {\n                        var itemDiv = jQuery(\"<div>\", { \"class\": \"ganttview-vtheader-item\" });\n                        itemDiv.append(jQuery(\"<div>\", {\n                            \"class\": \"ganttview-vtheader-item-name\",\n                            \"css\": { \"height\": (data[i].series.length * cellHeight) + \"px\" }\n                        }).append(data[i].name));\n                        var seriesDiv = jQuery(\"<div>\", { \"class\": \"ganttview-vtheader-series\" });\n                        for (var j = 0; j < data[i].series.length; j++) {\n                            seriesDiv.append(jQuery(\"<div>\", { \"class\": \"ganttview-vtheader-series-name\" })\n                                .append(data[i].series[j].name));\n                        }\n                        itemDiv.append(seriesDiv);\n                        headerDiv.append(itemDiv);\n                    }\n                    div.append(headerDiv);\n                }\n\n                function addHzHeader(div, dates, cellWidth) {\n                    var headerDiv = jQuery(\"<div>\", { \"class\": \"ganttview-hzheader\" });\n                    var monthsDiv = jQuery(\"<div>\", { \"class\": \"ganttview-hzheader-months\" });\n                    var daysDiv = jQuery(\"<div>\", { \"class\": \"ganttview-hzheader-days\" });\n                    var totalW = 0;\n                    for (var y in dates) {\n                        for (var m in dates[y]) {\n                            var w = dates[y][m].length * cellWidth;\n                            totalW = totalW + w;\n                            monthsDiv.append(jQuery(\"<div>\", {\n                                \"class\": \"ganttview-hzheader-month\",\n                                \"css\": { \"width\": (w - 1) + \"px\" }\n                            }).append(monthNames[m] + \"/\" + y));\n                            for (var d in dates[y][m]) {\n                                daysDiv.append(jQuery(\"<div>\", { \"class\": \"ganttview-hzheader-day\" })\n                                    .append(dates[y][m][d].getDate()));\n                            }\n                        }\n                    }\n                    monthsDiv.css(\"width\", totalW + \"px\");\n                    daysDiv.css(\"width\", totalW + \"px\");\n                    headerDiv.append(monthsDiv).append(daysDiv);\n                    div.append(headerDiv);\n                }\n\n                function addGrid(div, data, dates, cellWidth, showWeekends) {\n                    var gridDiv = jQuery(\"<div>\", { \"class\": \"ganttview-grid\" });\n                    var rowDiv = jQuery(\"<div>\", { \"class\": \"ganttview-grid-row\" });\n                    for (var y in dates) {\n                        for (var m in dates[y]) {\n                            for (var d in dates[y][m]) {\n                                var cellDiv = jQuery(\"<div>\", { \"class\": \"ganttview-grid-row-cell\" });\n                                if (DateUtils.isWeekend(dates[y][m][d]) && showWeekends) {\n                                    cellDiv.addClass(\"ganttview-weekend\");\n                                }\n                                rowDiv.append(cellDiv);\n                            }\n                        }\n                    }\n                    var w = jQuery(\"div.ganttview-grid-row-cell\", rowDiv).length * cellWidth;\n                    rowDiv.css(\"width\", w + \"px\");\n                    gridDiv.css(\"width\", w + \"px\");\n                    for (var i = 0; i < data.length; i++) {\n                        for (var j = 0; j < data[i].series.length; j++) {\n                            gridDiv.append(rowDiv.clone());\n                        }\n                    }\n                    div.append(gridDiv);\n                }\n\n                function addBlockContainers(div, data) {\n                    var blocksDiv = jQuery(\"<div>\", { \"class\": \"ganttview-blocks\" });\n                    for (var i = 0; i < data.length; i++) {\n                        for (var j = 0; j < data[i].series.length; j++) {\n                            blocksDiv.append(jQuery(\"<div>\", { \"class\": \"ganttview-block-container\" }));\n                        }\n                    }\n                    div.append(blocksDiv);\n                }\n\n                function addBlocks(div, data, cellWidth, start) {\n                    var rows = jQuery(\"div.ganttview-blocks div.ganttview-block-container\", div);\n                    var rowIdx = 0;\n                    for (var i = 0; i < data.length; i++) {\n                        for (var j = 0; j < data[i].series.length; j++) {\n                            var series = data[i].series[j];\n                            var size = DateUtils.daysBetween(series.start, series.end) + 1;\n                            var offset = DateUtils.daysBetween(start, series.start);\n                            var block = jQuery(\"<div>\", {\n                                \"class\": \"ganttview-block\",\n                                \"title\": series.name + \", \" + size + \" days\",\n                                \"css\": {\n                                    \"width\": ((size * cellWidth) - 9) + \"px\",\n                                    \"margin-left\": ((offset * cellWidth) + 3) + \"px\"\n                                }\n                            });\n                            addBlockData(block, data[i], series);\n                            if (data[i].series[j].color) {\n                                block.css(\"background-color\", data[i].series[j].color);\n                            }\n                            block.append(jQuery(\"<div>\", { \"class\": \"ganttview-block-text\" }).text(size));\n                            jQuery(rows[rowIdx]).append(block);\n                            rowIdx = rowIdx + 1;\n                        }\n                    }\n                }\n\n                function addBlockData(block, data, series) {\n                    // This allows custom attributes to be added to the series data objects\n                    // and makes them available to the 'data' argument of click, resize, and drag handlers\n                    var blockData = { id: data.id, name: data.name };\n                    jQuery.extend(blockData, series);\n                    block.data(\"block-data\", blockData);\n                }\n\n                function applyLastClass(div) {\n                    jQuery(\"div.ganttview-grid-row div.ganttview-grid-row-cell:last-child\", div).addClass(\"last\");\n                    jQuery(\"div.ganttview-hzheader-days div.ganttview-hzheader-day:last-child\", div).addClass(\"last\");\n                    jQuery(\"div.ganttview-hzheader-months div.ganttview-hzheader-month:last-child\", div).addClass(\"last\");\n                }\n\n                return {\n                    render: render\n                };\n            }\n\n            var Behavior = function (div, opts) {\n\n                function apply() {\n\n                    if (opts.behavior.clickable) {\n                        bindBlockClick(div, opts.behavior.onClick);\n                    }\n\n                    if (opts.behavior.resizable) {\n                        bindBlockResize(div, opts.cellWidth, opts.start, opts.behavior.onResize);\n                    }\n\n                    if (opts.behavior.draggable) {\n                        bindBlockDrag(div, opts.cellWidth, opts.start, opts.behavior.onDrag);\n                    }\n                }\n\n                function bindBlockClick(div, callback) {\n                    jQuery(\"div.ganttview-block\", div).live(\"click\", function () {\n                        if (callback) { callback(jQuery(this).data(\"block-data\")); }\n                    });\n                }\n\n                function bindBlockResize(div, cellWidth, startDate, callback) {\n                    jQuery(\"div.ganttview-block\", div).resizable({\n                        grid: cellWidth,\n                        handles: \"e,w\",\n                        stop: function () {\n                            var block = jQuery(this);\n                            updateDataAndPosition(div, block, cellWidth, startDate);\n                            if (callback) { callback(block.data(\"block-data\")); }\n                        }\n                    });\n                }\n\n                function bindBlockDrag(div, cellWidth, startDate, callback) {\n                    jQuery(\"div.ganttview-block\", div).draggable({\n                        axis: \"x\",\n                        grid: [cellWidth, cellWidth],\n                        stop: function () {\n                            var block = jQuery(this);\n                            updateDataAndPosition(div, block, cellWidth, startDate);\n                            if (callback) { callback(block.data(\"block-data\")); }\n                        }\n                    });\n                }\n\n                function updateDataAndPosition(div, block, cellWidth, startDate) {\n                    var container = jQuery(\"div.ganttview-slide-container\", div);\n                    var scroll = container.scrollLeft();\n                    var offset = block.offset().left - container.offset().left - 1 + scroll;\n\n                    // Set new start date\n                    var daysFromStart = Math.round(offset / cellWidth);\n                    var newStart = startDate.clone().addDays(daysFromStart);\n                    block.data(\"block-data\").start = newStart;\n\n                    // Set new end date\n                    var width = block.outerWidth();\n                    var numberOfDays = Math.round(width / cellWidth) - 1;\n                    block.data(\"block-data\").end = newStart.clone().addDays(numberOfDays);\n                    jQuery(\"div.ganttview-block-text\", block).text(numberOfDays + 1);\n\n                    // Remove top and left properties to avoid incorrect block positioning,\n                    // set position to relative to keep blocks relative to scrollbar when scrolling\n                    block.css(\"top\", \"\").css(\"left\", \"\")\n                        .css(\"position\", \"relative\").css(\"margin-left\", offset + \"px\");\n                }\n\n                return {\n                    apply: apply\n                };\n            }\n\n            var ArrayUtils = {\n\n                contains: function (arr, obj) {\n                    var has = false;\n                    for (var i = 0; i < arr.length; i++) { if (arr[i] == obj) { has = true; } }\n                    return has;\n                }\n            };\n\n            var DateUtils = {\n\n                daysBetween: function (start, end) {\n                    if (!start || !end) { return 0; }\n                    start = Date.parse(start); end = Date.parse(end);\n                    if (start.getYear() == 1901 || end.getYear() == 8099) { return 0; }\n                    var count = 0, date = start.clone();\n                    while (date.compareTo(end) == -1) { count = count + 1; date.addDays(1); }\n                    return count;\n                },\n\n                isWeekend: function (date) {\n                    return date.getDay() % 6 == 0;\n                },\n\n                getBoundaryDatesFromData: function (data, minDays) {\n                    var minStart = new Date(); maxEnd = new Date();\n                    for (var i = 0; i < data.length; i++) {\n                        for (var j = 0; j < data[i].series.length; j++) {\n                            var start = Date.parse(data[i].series[j].start);\n                            var end = Date.parse(data[i].series[j].end)\n                            if (i == 0 && j == 0) { minStart = start; maxEnd = end; }\n                            if (minStart.compareTo(start) == 1) { minStart = start; }\n                            if (maxEnd.compareTo(end) == -1) { maxEnd = end; }\n                        }\n                    }\n\n                    // Insure that the width of the chart is at least the slide width to avoid empty\n                    // whitespace to the right of the grid\n                    if (DateUtils.daysBetween(minStart, maxEnd) < minDays) {\n                        maxEnd = minStart.clone().addDays(minDays);\n                    }\n\n                    return [minStart, maxEnd];\n                }\n            };\n\n        })(jQuery);\n        return (\n            <div>\n            <div id=\"ganttChart\"></div>\n            <br/><br/>\n            <div id=\"eventMessage\"></div>\n            </div>\n            )\n    }\n}\n\nexport default Radium(PageSix);"]},"metadata":{},"sourceType":"module"}