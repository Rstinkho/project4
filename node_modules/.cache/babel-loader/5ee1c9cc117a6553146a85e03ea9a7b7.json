{"ast":null,"code":"import _classCallCheck from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taras/wdi/react_max/assignments/1/base_syntax/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taras/wdi/react_max/assignments/1/base_syntax/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport UserInput from './User_input/UserInput';\nimport UserOutput from './User_output/UserOutput';\nimport PageOne from './pages/pageOne.js';\nimport PageTwo from './pages/pageTwo.js';\nimport PageThree from './pages/pageThree.js';\nimport PageFour from './pages/pageFour.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"Max\"\n    };\n\n    _this.usernameHandler = function (event) {\n      _this.setState({\n        username: event.target.value\n      });\n    };\n\n    _this.onload = function () {\n      // create simple Gantt chart\n      new wijmo.chart.FlexChart('#simple-gantt', {\n        itemsSource: getSimpleData(7),\n        chartType: 'Bar',\n        bindingX: 'name',\n        tooltip: {\n          content: getTooltipContent\n        },\n        axisY: {\n          majorGrid: false,\n          minorGrid: true,\n          reversed: true\n        },\n        series: [{\n          binding: 'start,end'\n        }]\n      }); // create advanced Gantt chart (showing completion percentage and dependencies)\n\n      new wijmo.chart.FlexChart('#advanced-gantt', {\n        itemsSource: getAdvancedData(),\n        chartType: 'Bar',\n        bindingX: 'name',\n        tooltip: {\n          content: getTooltipContent\n        },\n        axisY: {\n          majorGrid: false,\n          minorGrid: true,\n          reversed: true\n        },\n        itemFormatter: ganttItemFormatter,\n        rendered: ganttChartRendered,\n        series: [{\n          binding: 'start,end'\n        }]\n      }); // utilities\n\n      function getTooltipContent(ht) {\n        var str = wijmo.format('<b>{name}</b>:<br/>{start:d} - {end:d}', {\n          name: ht.x,\n          start: ht.item.start,\n          end: ht.item.end\n        });\n\n        if (ht.item && ht.item.percent != null) {\n          str += wijmo.format('<br/><i>percent complete: {percent}%</i>', ht.item);\n        }\n\n        return str;\n      } // show the percentage complete for each task\n\n\n      function ganttItemFormatter(engine, hti, defaultFormatter) {\n        // draw the item as usual\n        defaultFormatter(); // show percentage done\n\n        var task = hti.item;\n\n        if (wijmo.isNumber(task.percent) && task.percent > 0) {\n          var pct = wijmo.clamp(task.percent, 0, 100) / 100,\n              rc = getTaskRect(hti.series.chart, task).inflate(-8, -8);\n          engine.fill = pct == 1 ? 'green' : 'gold'; //engine.stroke;\n\n          engine.drawRect(rc.left, rc.top, rc.width * pct, rc.height);\n        }\n      } // show the task dependencies\n\n\n      function ganttChartRendered(s, e) {\n        var chart = s,\n            tasks = chart.collectionView.items;\n        tasks.forEach(function (task) {\n          // for each task\n          var parents = getTaskParents(task, tasks); // get the parent tasks\n\n          parents.forEach(function (parent) {\n            // for each parent\n            drawConnectingLine(e.engine, chart, task, parent); // draw connector\n          });\n        });\n      }\n\n      function drawConnectingLine(engine, chart, task, parent) {\n        var rc1 = getTaskRect(chart, parent),\n            // parent rect\n        rc2 = getTaskRect(chart, task),\n            // task rect\n        x1 = rc1.left + rc1.width / 2,\n            // parent x center\n        x2 = rc2.left,\n            // task left\n        y1 = rc1.bottom,\n            // parent bottom\n        y2 = rc2.top + rc2.height / 2; // task y center\n        // draw connecting line\n\n        var xs = [x1, x1, x2],\n            ys = [y1, y2, y2];\n        engine.drawLines(xs, ys, 'connector', {\n          stroke: 'black'\n        }); // draw arrow at the end\n\n        var sz = 5;\n        xs = [x2 - 2 * sz, x2, x2 - 2 * sz];\n        ys = [y2 - sz, y2, y2 + sz];\n        engine.drawPolygon(xs, ys, 'arrow', {\n          fill: 'black'\n        });\n      }\n\n      function getTaskRect(chart, task) {\n        var x1 = chart.axisX.convert(task.start),\n            x2 = chart.axisX.convert(task.end),\n            index = chart.collectionView.items.indexOf(task),\n            y1 = chart.axisY.convert(index - .35),\n            y2 = chart.axisY.convert(index + .35);\n        return new wijmo.Rect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\n      }\n\n      function getTaskParents(task, tasks) {\n        parents = [];\n\n        if (task.parent) {\n          task.parent.split(',').forEach(function (name) {\n            for (var i = 0; i < tasks.length; i++) {\n              if (tasks[i].name == name) {\n                parents.push(tasks[i]);\n                break;\n              }\n            }\n          });\n        }\n\n        return parents;\n      } // data for the simple Gantt chart\n\n\n      function getSimpleData(cnt) {\n        var data = [],\n            date = new Date();\n\n        for (var i = 0; i < cnt; i++) {\n          var low = i + Math.ceil(Math.random() * 10),\n              high = low + Math.ceil(Math.random() * 10);\n          data.push({\n            name: 'Task' + (i + 1),\n            start: new Date(date.getTime() + low * 3600 * 24 * 1000),\n            end: new Date(date.getTime() + high * 3600 * 24 * 1000)\n          });\n        }\n\n        return data;\n      } // data for the advanced Gantt chart\n\n\n      function getAdvancedData() {\n        var year = new Date().getFullYear();\n        return [{\n          name: 'Task1',\n          start: new Date(year, 0, 1),\n          end: new Date(year, 2, 31),\n          parent: null,\n          percent: 100\n        }, {\n          name: 'Task2',\n          start: new Date(year, 3, 1),\n          end: new Date(year, 3, 30),\n          parent: 'Task1',\n          percent: 100\n        }, {\n          name: 'Task3',\n          start: new Date(year, 4, 1),\n          end: new Date(year, 6, 31),\n          parent: 'Task2',\n          percent: 75\n        }, {\n          name: 'Task4',\n          start: new Date(year, 3, 1),\n          end: new Date(year, 6, 31),\n          parent: 'Task1',\n          percent: 33\n        }, {\n          name: 'Task5',\n          start: new Date(year, 7, 1),\n          end: new Date(year, 8, 30),\n          parent: 'Task3,Task4',\n          percent: 0\n        }, {\n          name: 'Task6',\n          start: new Date(year, 9, 1),\n          end: new Date(year, 11, 31),\n          parent: 'Task1,Task5',\n          percent: 0\n        }, {\n          name: 'Task7',\n          start: new Date(year, 0, 1),\n          end: new Date(year, 11, 31),\n          parent: null,\n          percent: 50\n        }];\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        backgroundColor: 'lightgray',\n        border: '1px solid black',\n        padding: '15px',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(PageOne, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(PageTwo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(PageThree, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(PageFour, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://grapecitycontentcdn.azureedge.net/gcbrand/samples/wijmo/wijmo-logo.png\",\n        alt: \"Wijmo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"GanttChart\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"This page shows how to create GanttChart using FlexChart.\"))), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        id: \"Start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Getting Started\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Steps for getting started with the FlexChart to customize a GanttChart:\"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Add references to Wijmo (\", React.createElement(\"a\", {\n        href: \"http://demos.wijmo.com/5/Angular/WijmoHelp/WijmoHelp/static/references.html\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"see details here\"), \").\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Add a div element to serve as the chart host.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Initialize the chart via JavaScript (set the chartType to 'Bar' and the itemsSource to the data).\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Add a series to the chart and set its binding property to the names of the fields that contain the start and end dates for each task.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Customize AxisY to hide the major grid and show minor grid.\")), React.createElement(\"div\", {\n        id: \"simple-gantt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        id: \"Start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Dependencies & Percent Complete\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Customize the chart by setting its itemFormatter property to a function that adds elements to show task dependencies and percent complete.\"), React.createElement(\"div\", {\n        id: \"advanced-gantt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/taras/wdi/react_max/assignments/1/base_syntax/src/App.js"],"names":["React","Component","UserInput","UserOutput","PageOne","PageTwo","PageThree","PageFour","App","state","username","usernameHandler","event","setState","target","value","onload","wijmo","chart","FlexChart","itemsSource","getSimpleData","chartType","bindingX","tooltip","content","getTooltipContent","axisY","majorGrid","minorGrid","reversed","series","binding","getAdvancedData","itemFormatter","ganttItemFormatter","rendered","ganttChartRendered","ht","str","format","name","x","start","item","end","percent","engine","hti","defaultFormatter","task","isNumber","pct","clamp","rc","getTaskRect","inflate","fill","drawRect","left","top","width","height","s","e","tasks","collectionView","items","forEach","parents","getTaskParents","parent","drawConnectingLine","rc1","rc2","x1","x2","y1","bottom","y2","xs","ys","drawLines","stroke","sz","drawPolygon","axisX","convert","index","indexOf","Rect","split","i","length","push","cnt","data","date","Date","low","Math","ceil","random","high","getTime","year","getFullYear","style","backgroundColor","border","padding","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport UserInput from './User_input/UserInput';\nimport UserOutput from './User_output/UserOutput';\nimport PageOne from './pages/pageOne.js'\nimport PageTwo from './pages/pageTwo.js'\nimport PageThree from './pages/pageThree.js'\nimport PageFour from './pages/pageFour.js'\nclass App extends Component {\n    state = {\n        username: \"Max\"\n    };\n\n    usernameHandler = (event) => {\n        this.setState( {\n            username: event.target.value\n        })\n    }\n\n    onload = function () {\n\n        // create simple Gantt chart\n        new wijmo.chart.FlexChart('#simple-gantt', {\n            itemsSource: getSimpleData(7),\n            chartType: 'Bar',\n            bindingX: 'name',\n            tooltip: {\n                content: getTooltipContent\n            },\n            axisY: {\n                majorGrid: false,\n                minorGrid: true,\n                reversed: true\n            },\n            series: [\n                { binding: 'start,end' }\n            ]\n        });\n\n        // create advanced Gantt chart (showing completion percentage and dependencies)\n        new wijmo.chart.FlexChart('#advanced-gantt', {\n            itemsSource: getAdvancedData(),\n            chartType: 'Bar',\n            bindingX: 'name',\n            tooltip: {\n                content: getTooltipContent\n            },\n            axisY: {\n                majorGrid: false,\n                minorGrid: true,\n                reversed: true\n            },\n            itemFormatter: ganttItemFormatter,\n            rendered: ganttChartRendered,\n            series: [\n                { binding: 'start,end' }\n            ]\n        });\n\n        // utilities\n        function getTooltipContent(ht) {\n            var str = wijmo.format('<b>{name}</b>:<br/>{start:d} - {end:d}', {\n                name: ht.x,\n                start: ht.item.start,\n                end: ht.item.end\n            });\n            if (ht.item && ht.item.percent != null) {\n                str += wijmo.format('<br/><i>percent complete: {percent}%</i>', ht.item);\n            }\n            return str;\n        }\n\n        // show the percentage complete for each task\n        function ganttItemFormatter(engine, hti, defaultFormatter) {\n\n            // draw the item as usual\n            defaultFormatter();\n\n            // show percentage done\n            var task = hti.item;\n            if (wijmo.isNumber(task.percent) && task.percent > 0) {\n                var pct = wijmo.clamp(task.percent, 0, 100) / 100,\n                    rc = getTaskRect(hti.series.chart, task).inflate(-8, -8);\n                engine.fill = pct == 1 ? 'green' : 'gold';//engine.stroke;\n                engine.drawRect(rc.left, rc.top, rc.width * pct, rc.height);\n            }\n        }\n\n        // show the task dependencies\n        function ganttChartRendered(s, e) {\n            var chart = s,\n                tasks = chart.collectionView.items;\n            tasks.forEach(function (task) { // for each task\n                var parents = getTaskParents(task, tasks); // get the parent tasks\n                parents.forEach(function (parent) { // for each parent\n                    drawConnectingLine(e.engine, chart, task, parent); // draw connector\n                });\n            });\n        }\n        function drawConnectingLine(engine, chart, task, parent) {\n            var rc1 = getTaskRect(chart, parent),   // parent rect\n                rc2 = getTaskRect(chart, task),     // task rect\n                x1 = rc1.left + rc1.width / 2,      // parent x center\n                x2 = rc2.left,                      // task left\n                y1 = rc1.bottom,                    // parent bottom\n                y2 = rc2.top + rc2.height / 2;      // task y center\n\n            // draw connecting line\n            var xs = [x1, x1, x2],\n                ys = [y1, y2, y2];\n            engine.drawLines(xs, ys, 'connector', {\n                stroke: 'black'\n            });\n\n            // draw arrow at the end\n            var sz = 5;\n            xs = [x2 - 2 * sz, x2, x2 - 2 * sz];\n            ys = [y2 - sz, y2, y2 + sz];\n            engine.drawPolygon(xs, ys, 'arrow', {\n                fill: 'black'\n            })\n        }\n        function getTaskRect(chart, task) {\n            var x1 = chart.axisX.convert(task.start),\n                x2 = chart.axisX.convert(task.end),\n                index = chart.collectionView.items.indexOf(task),\n                y1 = chart.axisY.convert(index - .35),\n                y2 = chart.axisY.convert(index + .35);\n            return new wijmo.Rect(x1, y1, x2 - x1 + 1, y2 - y1 + 1);\n        }\n        function getTaskParents(task, tasks) {\n            parents = [];\n            if (task.parent) {\n                task.parent.split(',').forEach(function (name) {\n                    for (var i = 0; i < tasks.length; i++) {\n                        if (tasks[i].name == name) {\n                            parents.push(tasks[i]);\n                            break;\n                        }\n                    }\n                });\n            }\n            return parents;\n        }\n\n        // data for the simple Gantt chart\n        function getSimpleData(cnt) {\n            var data = [],\n                date = new Date();\n            for (var i = 0; i < cnt; i++) {\n                var low = i + Math.ceil(Math.random() * 10),\n                    high = low + Math.ceil(Math.random() * 10);\n                data.push({\n                    name: 'Task' + (i + 1),\n                    start: new Date(date.getTime() + low * 3600 * 24 * 1000),\n                    end: new Date(date.getTime() + high * 3600 * 24 * 1000)\n                });\n            }\n            return data;\n        }\n\n        // data for the advanced Gantt chart\n        function getAdvancedData() {\n            var year = new Date().getFullYear();\n            return [\n                { name: 'Task1', start: new Date(year, 0, 1), end: new Date(year, 2, 31), parent: null, percent: 100 },\n                { name: 'Task2', start: new Date(year, 3, 1), end: new Date(year, 3, 30), parent: 'Task1', percent: 100 },\n                { name: 'Task3', start: new Date(year, 4, 1), end: new Date(year, 6, 31), parent: 'Task2', percent: 75 },\n                { name: 'Task4', start: new Date(year, 3, 1), end: new Date(year, 6, 31), parent: 'Task1', percent: 33 },\n                { name: 'Task5', start: new Date(year, 7, 1), end: new Date(year, 8, 30), parent: 'Task3,Task4', percent: 0 },\n                { name: 'Task6', start: new Date(year, 9, 1), end: new Date(year, 11, 31), parent: 'Task1,Task5', percent: 0 },\n                { name: 'Task7', start: new Date(year, 0, 1), end: new Date(year, 11, 31), parent: null, percent: 50 }\n            ];\n        }\n\n    }\n\n  render() {\n    const style = {\n        backgroundColor: 'lightgray',\n        border: '1px solid black',\n        padding: '15px',\n        cursor: 'pointer',\n\n    };\n    return (\n      <div className=\"App\" style={style}>\n      <PageOne />\n      <PageTwo />\n      <PageThree />\n      <PageFour />\n      <div class=\"header\">\n             <div class=\"container\">\n                 <img src=\"https://grapecitycontentcdn.azureedge.net/gcbrand/samples/wijmo/wijmo-logo.png\" alt=\"Wijmo\" />\n                 <h1>\n                     GanttChart\n                 </h1>\n                 <p>\n                     This page shows how to create GanttChart using FlexChart.\n                 </p>\n             </div>\n         </div>\n\n         <div class=\"container\">\n             <h2 id=\"Start\">\n                 Getting Started\n             </h2>\n             <p>\n                 Steps for getting started with the FlexChart to customize a GanttChart:\n             </p>\n             <ol>\n                 <li>Add references to Wijmo\n                     (<a href=\"http://demos.wijmo.com/5/Angular/WijmoHelp/WijmoHelp/static/references.html\" target=\"_blank\">see details here</a>).</li>\n                 <li>Add a div element to serve as the chart host.</li>\n                 <li>Initialize the chart via JavaScript (set the chartType to 'Bar' and the itemsSource to the data).</li>\n                 <li>Add a series to the chart and set its binding property to the names of the fields that contain the start and end dates for each task.</li>\n                 <li>Customize AxisY to hide the major grid and show minor grid.</li>\n             </ol>\n             <div id=\"simple-gantt\"></div>\n\n\n             <h2 id=\"Start\">\n                 Dependencies &amp; Percent Complete\n             </h2>\n             <p>\n                 Customize the chart by setting its itemFormatter property\n                 to a function that adds elements to show task dependencies\n                 and percent complete.\n             </p>\n             <div id=\"advanced-gantt\"></div>\n         </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}